# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
SUBSYSTEM_DIR = "//foundation/aafwk/standard/frameworks/kits/ability/native"
INNERKITS_PATH = "//foundation/aafwk/standard/interfaces/innerkits"

config("ability_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "//base/miscservices/wallpaper/frameworks/innerkitsimpl/wallpaper_manager/include",
    "//base/miscservices/wallpaper/frameworks/kits/extension/include",
    "${INNERKITS_PATH}/base/include",
    "//utils/native/base/include",
    "${SUBSYSTEM_DIR}/include",
    "//foundation/aafwk/standard/frameworks/kits/appkit/native/app/include",
    "//foundation/aafwk/standard/interfaces/innerkits/app_manager/include/appmgr",
    "${INNERKITS_PATH}/want/include/ohos/aafwk/content",
    "${INNERKITS_PATH}/ability_manager/include",
    "//foundation/aafwk/standard/services/abilitymgr/include",
    "//foundation/aafwk/standard/interfaces/innerkits/form_manager/include",
    "//foundation/aafwk/standard/frameworks/kits/appkit/native/ability_runtime/app",
    "//foundation/aafwk/standard/frameworks/kits/appkit/native/app/include",
    "//foundation/aafwk/standard/frameworks/kits/fmskit/native/include",
    "//foundation/aafwk/standard/frameworks/kits/app/native/app/include",
    "//foundation/aafwk/standard/services/common/include",

    #"//foundation/distributedschedule/dmsfwk/services/dtbschedmgr/include",
    "//foundation/aafwk/standard/interfaces/innerkits/uri/include",
    "//base/global/resource_management/interfaces/innerkits/include",
    "//foundation/aafwk/standard/interfaces/kits/napi/aafwk/featureAbility",
    "//foundation/arkui/napi/interfaces/kits",
    "//third_party/node/src",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
    "//foundation/aafwk/standard/frameworks/kits/ability/native/include/continuation/remote_register_service",
    "//foundation/aafwk/standard/frameworks/kits/ability/native/include/continuation/distributed",
    "//foundation/aafwk/standard/frameworks/kits/ability/native/include/distributed_ability_runtime",
    "//foundation/aafwk/standard/interfaces/innerkits/ability_manager/include/continuation",
    "//foundation/aafwk/standard/frameworks/kits/ability/native/include/continuation/kits",
    "//base/security/permission/interfaces/innerkits/permission_standard/permissionsdk/main/cpp/include",
    "//foundation/aafwk/standard/frameworks/kits/appkit/native/app/include/task",
    "//foundation/aafwk/standard/interfaces/kits/napi/aafwk/inner/napi_common",
  ]

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
  defines = [
    "APP_LOG_TAG = \"Ability\"",
    "LOG_DOMAIN = 0xD002200",
  ]
}

config("ability_public_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "//base/miscservices/wallpaper/frameworks/innerkitsimpl/wallpaper_manager/include",
    "//base/miscservices/wallpaper/frameworks/kits/extension/include",
    "${INNERKITS_PATH}/base/include",
    "//foundation/aafwk/standard/frameworks/kits/appkit/native",
    "//foundation/aafwk/standard/frameworks/kits/appkit/native/ability_runtime/app",
    "//foundation/aafwk/standard/frameworks/kits/appkit/native/app/include",
    "//foundation/aafwk/standard/frameworks/kits/appkit/native/ability_runtime",
    "${SUBSYSTEM_DIR}/include",
    "//third_party/libuv/include",
    "//foundation/aafwk/standard/frameworks/kits/appkit/native/ability_runtime/context",
    "//foundation/aafwk/standard/interfaces/innerkits/base/include/ohos/aafwk/base",
    "//foundation/aafwk/standard/frameworks/kits/ability/native/include/continuation/remote_register_service",
    "//foundation/aafwk/standard/frameworks/kits/ability/native/include/continuation/distributed",
    "//foundation/aafwk/standard/frameworks/kits/ability/native/include/distributed_ability_runtime",
    "//foundation/aafwk/standard/interfaces/innerkits/ability_manager/include/continuation",
    "//base/global/resource_management/interfaces/innerkits/include",
    "//foundation/aafwk/standard/frameworks/kits/ability/native/include/continuation/kits",
    "//foundation/aafwk/standard/frameworks/kits/fmskit/native/include",
    "//foundation/aafwk/standard/interfaces/innerkits/form_manager/include",
    "//foundation/windowmanager/interfaces/innerkits/wm",
    "//foundation/windowmanager/interfaces/kits/napi/window_runtime/window_stage_napi",
    "//third_party/jsoncpp/include",
    "//third_party/json/include",
  ]
}

ohos_shared_library("wallpaperextension") {
  include_dirs = [
    "//base/miscservices/wallpaper/frameworks/innerkitsimpl/wallpaper_manager/include",
    "//base/miscservices/wallpaper/frameworks/kits/extension/include",
    "//foundation/aafwk/standard/interfaces/innerkits/uri/include",
    "//foundation/distributeddatamgr/appdatamgr/frameworks/js/napi/rdb/include",
    "//foundation/distributeddatamgr/appdatamgr/frameworks/js/napi/common/include",
    "//foundation/distributeddatamgr/appdatamgr/frameworks/js/napi/dataability/include",
    "//foundation/distributeddatamgr/appdatamgr/frameworks/js/napi/resultset/include",
    "//base/global/i18n/frameworks/intl/include",
  ]

  sources = [
    "//base/miscservices/wallpaper/frameworks/kits/extension/src/js_wallpaper_extension.cpp",
    "//base/miscservices/wallpaper/frameworks/kits/extension/src/js_wallpaper_extension_context.cpp",
    "//base/miscservices/wallpaper/frameworks/kits/extension/src/wallpaper_extension.cpp",
    "//base/miscservices/wallpaper/frameworks/kits/extension/src/wallpaper_extension_context.cpp",
  ]
  configs = [ ":ability_config" ]
  public_configs = [
    ":ability_public_config",
    "//foundation/aafwk/standard/frameworks/kits/ability/ability_runtime:ability_context_public_config",
  ]

  deps = [
    "${INNERKITS_PATH}/base:base",
    "${INNERKITS_PATH}/want:want",
    "//base/miscservices/wallpaper/frameworks/innerkitsimpl/wallpaper_manager:wallpapermanager",
    "//base/security/permission/interfaces/innerkits/permission_standard/permissionsdk:libpermissionsdk_standard",
    "//foundation/aafwk/standard/frameworks/kits/ability/ability_runtime:ability_context_native",
    "//foundation/aafwk/standard/frameworks/kits/ability/native:abilitykit_native",
    "//foundation/aafwk/standard/frameworks/kits/ability/native:static_subscriber_ipc",
    "//foundation/aafwk/standard/frameworks/kits/appkit:app_context",
    "//foundation/aafwk/standard/interfaces/innerkits/ability_manager:ability_manager",
    "//foundation/aafwk/standard/interfaces/innerkits/app_manager:app_manager",
    "//foundation/aafwk/standard/interfaces/innerkits/dataobs_manager:dataobs_manager",
    "//foundation/arkui/napi:ace_napi",

    #"//foundation/distributedschedule/dmsfwk/interfaces/innerkits/uri:zuri",
    #"//foundation/aafwk/standard/interfaces/innerkits/uri/include",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//foundation/multimodalinput/input/frameworks/proxy:libmmi-common",
    "//third_party/icu/icu4c:shared_icuuc",
  ]

  external_deps = [
    "ability_base:zuri",
    "ability_runtime:ability_context_native",
    "ability_runtime:app_manager",
    "ability_runtime:napi_base_context",
    "ability_runtime:runtime",
    "common_event_service:cesfwk_innerkits",
    "form_runtime:fmskit_native",
    "form_runtime:form_manager",
    "hitrace_native:hitrace_meter",
    "input:libmmi-client",
    "ipc:ipc_core",
    "ipc_js:rpc",
    "native_appdatamgr:native_appdatafwk",
    "native_appdatamgr:native_dataability",
    "native_appdatamgr:native_rdb",
    "utils_base:utils",
  ]

  public_deps = [
    "//base/global/i18n/frameworks/intl:intl_util",
    "//base/global/resource_management/frameworks/resmgr:global_resmgr",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog",
    "//foundation/arkui/napi:ace_napi",
    "//foundation/graphic/standard:libwmclient",
    "//foundation/windowmanager/interfaces/kits/napi/window_runtime:windowstage_kit",
    "//foundation/windowmanager/wm:libwm",
  ]

  subsystem_name = "miscservices"
  part_name = "wallpaper_native"
}

ohos_shared_library("wallpaper_extension_module") {
  include_dirs = [
    "//foundation/aafwk/standard/frameworks/kits/ability/native/include",
    "//foundation/aafwk/standard/frameworks/kits/ability/native/include/ability_runtime",
  ]

  sources = [ "//base/miscservices/wallpaper/frameworks/kits/extension/src/wallpaper_extension_module_loader.cpp" ]

  configs = [ ":ability_config" ]
  public_configs = [ ":ability_public_config" ]

  deps = [
    ":wallpaperextension",
    "//foundation/aafwk/standard/frameworks/kits/ability/native:abilitykit_native",
    "//foundation/windowmanager/utils:libwmutil",
    "//foundation/windowmanager/wm:libwm",
    "//utils/native/base:utils",
  ]

  external_deps = [
    "ability_runtime:runtime",
    "hiviewdfx_hilog_native:libhilog",
  ]

  subsystem_name = "miscservices"
  part_name = "wallpaper_native"
}
